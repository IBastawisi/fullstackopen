{"version":3,"sources":["components/Contacts.js","components/ContactForm.js","components/Search.js","services/contacts.js","components/Announcer.js","App.js","index.js"],"names":["Contacts","contacts","handleDelete","map","c","name","number","onClick","id","ContactForm","addContact","newName","handleNameInput","newNumber","handleNumberInput","onSubmit","value","onInput","type","Search","searchQuery","setSearchQuery","e","target","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Announcer","announcement","className","style","message","App","useState","setContacts","setNewName","setNewNumber","setAnnouncement","useEffect","contactService","filteredContacts","trim","length","filter","toLowerCase","includes","event","preventDefault","dublicate","find","contact","window","confirm","returnedContact","setTimeout","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52a16e79.chunk.js","sourcesContent":["import React from 'react'\r\nexport const Contacts = ({ contacts, handleDelete }) =>\r\n    <div>\r\n        {contacts.map(c =>\r\n            <div key={c.id}>\r\n                <span>{c.name}: {c.number}</span>\r\n                <button onClick={() => handleDelete(c)}>DELETE</button>\r\n            </div>\r\n        )}\r\n    </div>","import React from 'react'\r\nexport const ContactForm = ({ addContact, newName, handleNameInput, newNumber, handleNumberInput }) =>\r\n    <form onSubmit={addContact}>\r\n        <div>\r\n            Name: <input value={newName} onInput={handleNameInput} />\r\n        </div>\r\n        <div>\r\n            Number: <input value={newNumber} onInput={handleNumberInput} />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">Add</button>\r\n        </div>\r\n    </form>\r\n","import React from 'react'\r\nexport const Search = ({searchQuery, setSearchQuery}) => <div><span>Search Contacts</span><input type=\"search\" value={searchQuery} onInput={e => setSearchQuery(e.target.value)} /></div>","import axios from 'axios'\r\nconst baseUrl = '/api/contacts'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update , remove}","export const Announcer = ({ announcement }) => {\r\n    if (!announcement) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className={`announcement ${announcement.style}`}>\r\n        {announcement.message}\r\n      </div>\r\n    )\r\n  }","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Contacts } from './components/Contacts'\r\nimport { ContactForm } from './components/ContactForm'\r\nimport { Search } from './components/Search'\r\nimport contactService from './services/contacts'\r\nimport { Announcer } from './components/Announcer'\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [announcement, setAnnouncement] = useState(null)\r\n\r\n  useEffect(() => {\r\n    contactService.getAll()\r\n      .then(contacts => setContacts(contacts))\r\n  }, [])\r\n\r\n  const handleNameInput = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberInput = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const addContact = (event) => {\r\n    event.preventDefault()\r\n    const dublicate = contacts.find(c => c.name === newName)\r\n\r\n    const contact = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n\r\n    if (dublicate) {\r\n      const confirmed = window.confirm(`${contact.name} is already in the phonebook, update his number?`)\r\n      confirmed && contactService.update(dublicate.id, contact).then(returnedContact => {\r\n        setAnnouncement({\r\n          message: `${contact.name} was successfully updated`,\r\n          style: 'success'\r\n        })\r\n        setTimeout(() => {\r\n          setAnnouncement(null)\r\n        }, 3000)\r\n        setContacts(contacts.map(c => c.id === returnedContact.id ? returnedContact : c))\r\n        setNewName('')\r\n        setNewNumber('')\r\n      }).catch(e => {\r\n        setAnnouncement({\r\n          message: e.response.data.error,\r\n          style: 'error'\r\n        })\r\n        setTimeout(() => {\r\n          setAnnouncement(null)\r\n        }, 3000)\r\n      })\r\n      return\r\n    }\r\n\r\n    contactService.create(contact).then(returnedContact => {\r\n      setAnnouncement({\r\n        message: `${contact.name} was successfully added`,\r\n        style: 'success'\r\n      })\r\n      setTimeout(() => {\r\n        setAnnouncement(null)\r\n      }, 3000)\r\n\r\n      setContacts(contacts.concat(returnedContact))\r\n      setNewName('')\r\n      setNewNumber('')\r\n    }).catch(e => {\r\n      setAnnouncement({\r\n        message: e.response.data.error,\r\n        style: 'error'\r\n      })\r\n      setTimeout(() => {\r\n        setAnnouncement(null)\r\n      }, 3000)\r\n    })\r\n  }\r\n\r\n  const deleteContact = (contact) => {\r\n    if (window.confirm(`Delete ${contact.name}?`)) {\r\n      contactService.remove(contact.id)\r\n        .then(() => {\r\n          setAnnouncement({\r\n            message: `${contact.name} was successfully deleted`,\r\n            style: 'success'\r\n          })\r\n          setTimeout(() => {\r\n            setAnnouncement(null)\r\n          }, 3000)\r\n\r\n          setContacts(contacts.filter(c => c.id != contact.id))\r\n        })\r\n        .catch(() => {\r\n          setAnnouncement({\r\n            message: `${contact.name} was already deleted from server`,\r\n            style: 'error'\r\n          })\r\n          setTimeout(() => {\r\n            setAnnouncement(null)\r\n          }, 3000)\r\n          setContacts(contacts.filter(c => c.id != contact.id))\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  const filteredContacts = searchQuery.trim().length > 0\r\n    ? contacts.filter(c => c.name.toLowerCase().includes(searchQuery.toLowerCase()))\r\n    : contacts\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Announcer {...{ announcement }} />\r\n      <Search {...{ searchQuery, setSearchQuery }} />\r\n      <h3>Add New</h3>\r\n      <ContactForm {...{ addContact, newName, handleNameInput, newNumber, handleNumberInput }} />\r\n      <h3>Numbers</h3>\r\n      <Contacts contacts={filteredContacts} handleDelete={deleteContact} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}